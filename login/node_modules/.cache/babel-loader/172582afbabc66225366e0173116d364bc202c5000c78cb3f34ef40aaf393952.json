{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import { response } from 'express';\n// import send from 'send';\n\nexport default {\n  name: 'login',\n  data() {\n    return {\n      \"account\": \"\",\n      \"password\": \"\",\n      \"info\": \"\",\n      \"logintype\": \"\"\n    };\n  },\n  mounted() {\n    if (this.$store.state.isclient) {\n      this.logintype = '用户';\n    } else {\n      this.logintype = '管理员';\n    }\n  },\n  methods: {\n    dosubmit: function () {\n      var send_data = {\n        \"account\": this.account,\n        \"password\": this.password\n      };\n      if (this.$store.state.isclient) {\n        this.axios({\n          method: 'POST',\n          url: `${this.baseURL}/client/login`,\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n          }\n        }).then(response => {\n          if (response.code == 200) {\n            this.$router.push('/client/manage');\n          } else {\n            this.info = '账号或密码错误';\n          }\n        }).catch(error => {\n          alert('出错了');\n        });\n        // this.$router.push('/client/manage')\n      } else {\n        this.axios({\n          method: 'POST',\n          url: `${this.baseURL}/posts`,\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n          }\n        }).then(response => {\n          if (response.code == 200) {\n            this.$router.push('/admin/manage');\n          } else {\n            this.info = '账号或密码错误';\n          }\n        }).catch(error => {\n          alert('出错了');\n        });\n        // this.$router.push('/admin/manage')\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","mounted","$store","state","isclient","logintype","methods","dosubmit","send_data","account","password","axios","method","url","baseURL","headers","then","response","code","$router","push","info","catch","error","alert"],"sources":["src/components/login.vue"],"sourcesContent":["<template>\r\n    <div class=\"back\">\r\n      <div class=\"box\">\r\n        <h1 class=\"title\">{{logintype}}登录</h1>\r\n        <input type=\"text\" id=\"account\" placeholder=\"Username\" v-model=\"account\">\r\n        <input type=\"password\" id=\"password\" placeholder=\"Password\" v-model=\"password\">\r\n        <span style=\"color:red;\">{{ info }}</span>\r\n        <input type=\"button\" id=\"submit\" @click=\"dosubmit\" value=\"登录\">\r\n        <!-- 指定组件呈现位置 -->\r\n        <router-view></router-view>\r\n      </div>\r\n    </div>\r\n  </template>\r\n   \r\n  <script>\r\n// import { response } from 'express';\r\n// import send from 'send';\r\n\r\n    export default {\r\n      name: 'login',\r\n      data(){\r\n        return {\r\n            \"account\":\"\",\r\n            \"password\":\"\",\r\n            \"info\":\"\",\r\n            \"logintype\":\"\"\r\n        }\r\n      },\r\n      mounted(){\r\n        if(this.$store.state.isclient){\r\n          this.logintype = '用户'\r\n        }\r\n        else{\r\n          this.logintype = '管理员'\r\n        }\r\n      },\r\n      methods: {\r\n        dosubmit: function() {\r\n          var send_data = {\r\n            \"account\":this.account,\r\n            \"password\":this.password\r\n          }\r\n          if(this.$store.state.isclient){\r\n            this.axios({\r\n              method:'POST',\r\n              url:`${this.baseURL}/client/login`,\r\n              headers:{\r\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\r\n              }\r\n            })\r\n            .then((response)=>{\r\n              if(response.code == 200){\r\n                this.$router.push('/client/manage')\r\n              }\r\n              else{\r\n                this.info = '账号或密码错误'\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              alert('出错了')\r\n            })\r\n            // this.$router.push('/client/manage')\r\n          }\r\n          else{\r\n            this.axios({\r\n              method:'POST',\r\n              url:`${this.baseURL}/posts`,\r\n              headers:{\r\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\r\n              }\r\n            })\r\n            .then((response)=>{\r\n              if(response.code == 200){\r\n                this.$router.push('/admin/manage')\r\n              }\r\n              else{\r\n                this.info = '账号或密码错误'\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              alert('出错了')\r\n            })\r\n            // this.$router.push('/admin/manage')\r\n          }\r\n          \r\n        }\r\n      }\r\n    }\r\n  </script>\r\n   \r\n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n  <style scoped>\r\n    .back {\r\n        /* 设置边距，可以设置四个方向，分别是 上 右 下 左  */\r\n        margin: 0; \r\n        /* 填充  也是可以设置四个方向，同上 */\r\n        padding: 0;\r\n        /* 设置字体风格 */\r\n        font-family: sans-serif;\r\n        /* 设置背景颜色 */\r\n        background: lightsteelblue;\r\n    }\r\n    .box {\r\n            width: 300px;\r\n            padding: 40px;\r\n            /* 绝对定位，通过这个可以使元素放在页面的任何一个位置上 */\r\n            position: absolute;\r\n            /* 以下三行代码实现了块元素在百分比下居中 可以参考： https://www.cnblogs.com/knuzy/p/9993181.html */\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(-50% , -50%);\r\n            /* 设置登陆界面的背景颜色 */\r\n            background-color: rgb(135, 166, 224);\r\n            /* 规定标签中元素属性为 text 的居中 */\r\n            text-align: center;\r\n    }\r\n   \r\n    .box h1 {\r\n            color: #349;\r\n            /* 控制文本大小写 */\r\n            text-transform: uppercase;\r\n            font-size: 500;\r\n        }\r\n    .box input[type=\"text\"],\r\n    .box input[type=\"password\"] {\r\n        border: 0;\r\n        background: none;\r\n        display: block;\r\n        /* 第一个参数定上下 20px 第二个auto自动适配 */\r\n        margin: 20px auto;\r\n        /* 文本居中 */\r\n        text-align: center;\r\n        /* 设置边框大小和颜色 */\r\n        border: 2px solid #3498db;\r\n        /* 两个参数分别对应 高 和 宽 */\r\n        padding: 14px 10px;\r\n        /* 设置边框为宽 */\r\n        width: 200px;\r\n        /* 边框对应的属性分别有三个 https://www.w3school.comcn/cssref/pr_outline.asp */\r\n        outline: none;\r\n        color: white;\r\n        /* 边框的半径 更圆润*/\r\n        border-radius: 24px;\r\n        /* 设置动画的过渡时间 */\r\n        transition: 0.25s;\r\n    }\r\n    .box input[type=\"text\"]:focus,\r\n    .box input[type=\"password\"]:focus {\r\n        width: 280px;\r\n        border-color: #2ecc71;\r\n    }\r\n\r\n    .box input[type=\"button\"] {\r\n            border: 0;\r\n            background: none;\r\n            display: block;\r\n            margin: 20px auto;\r\n            text-align: center;\r\n            border: 2px solid #2ecc71;\r\n            padding: 14px 40px;\r\n            outline: none;\r\n            color: black;\r\n            border-radius: 24px;\r\n            transition: 0.25s;\r\n        }\r\n\r\n        .box input[type=\"button\"]:hover {\r\n            background: #2ecc71;\r\n        }\r\n  </style>"],"mappings":";AAeA;AACA;;AAEA;EACAA,IAAA;EACAC,KAAA;IACA;MACA;MACA;MACA;MACA;IACA;EACA;EACAC,QAAA;IACA,SAAAC,MAAA,CAAAC,KAAA,CAAAC,QAAA;MACA,KAAAC,SAAA;IACA,OACA;MACA,KAAAA,SAAA;IACA;EACA;EACAC,OAAA;IACAC,QAAA,WAAAA,CAAA;MACA,IAAAC,SAAA;QACA,gBAAAC,OAAA;QACA,iBAAAC;MACA;MACA,SAAAR,MAAA,CAAAC,KAAA,CAAAC,QAAA;QACA,KAAAO,KAAA;UACAC,MAAA;UACAC,GAAA,UAAAC,OAAA;UACAC,OAAA;YACA;UACA;QACA,GACAC,IAAA,CAAAC,QAAA;UACA,IAAAA,QAAA,CAAAC,IAAA;YACA,KAAAC,OAAA,CAAAC,IAAA;UACA,OACA;YACA,KAAAC,IAAA;UACA;QACA,GACAC,KAAA,CAAAC,KAAA;UACAC,KAAA;QACA;QACA;MACA,OACA;QACA,KAAAb,KAAA;UACAC,MAAA;UACAC,GAAA,UAAAC,OAAA;UACAC,OAAA;YACA;UACA;QACA,GACAC,IAAA,CAAAC,QAAA;UACA,IAAAA,QAAA,CAAAC,IAAA;YACA,KAAAC,OAAA,CAAAC,IAAA;UACA,OACA;YACA,KAAAC,IAAA;UACA;QACA,GACAC,KAAA,CAAAC,KAAA;UACAC,KAAA;QACA;QACA;MACA;IAEA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}